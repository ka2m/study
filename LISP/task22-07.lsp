(defmacro sum-range ((iter-var low-bound high-bound) &body body)
  (let ((iter (gensym)) (sum (gensym)))
    `(let ((,iter-var ,low-bound) (,sum 0))
       (labels ((,iter ()
                  (if (<= ,iter-var ,high-bound)
                      (progn (incf ,sum (progn ,@body))
                             (incf ,iter-var)
                             (,iter))
                      ,sum)))
       (,iter)))))

(defmacro prod-range ((iter-var low-bound high-bound) &body body)
  (let ((iter (gensym)) (prod (gensym)))
    `(let ((,iter-var ,low-bound) (,prod 1))
       (labels ((,iter ()
                  (if (<= ,iter-var ,high-bound)
                      (progn (setq ,prod (* ,prod (progn ,@body)))
                             (incf ,iter-var)
                             (,iter))
                      ,prod)))
       (,iter)))))


(print (sum-range (i 0 5) (sin i)))
(print (prod-range (i 0 5) (sin i)))
