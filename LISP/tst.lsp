(defun atoms-count (l)
  (labels
    ((iter (l new-l cur-lvl cnt ans)
       (if (null l)
           (if (null new-l)
               (cons (list cur-lvl cnt) ans)
               (iter new-l () (1+ cur-lvl) 0 (cons (list cur-lvl cnt) ans)))
           (let ((fst-l (car l)) (bck-l (cdr l)))
              (if (atom fst-l)
                (iter bck-l new-l cur-lvl (1+ cnt) ans)
                (iter bck-l (append fst-l new-l) cur-lvl cnt ans))))))
    (iter l () 1 0 ())))

(print (atoms-count '(a b (c (e) d))))
(print (atoms-count '((a b) (c d))))()
(print (atoms-count '(a)))
(print (atoms-count '(a b (c d e (f g h (i j z 4))))))
(print (atoms-count '(b (c (d e (f) k 1 5) e))))
(print (atoms-count '(a (b (c (d e (f) k 1 5) e)))))
