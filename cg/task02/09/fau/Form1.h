#pragma once

#define CELL 20
#define DEFAULT_HEIGHT 360

namespace task02_09 {

	using namespace System;
	using namespace System::ComponentModel;
	using namespace System::Collections;
	using namespace System::Windows::Forms;
	using namespace System::Data;
	using namespace System::Drawing;

	/// <summary>
	/// Summary for Form1
	///
	/// WARNING: If you change the name of this class, you will need to change the
	///          'Resource File Name' property for the managed resource compiler tool
	///          associated with all .resx files this class depends on.  Otherwise,
	///          the designers will not be able to interact properly with localized
	///          resources associated with this form.
	/// </summary>
	public ref class Form1 : public System::Windows::Forms::Form
	{
	public:
		Form1(void)
		{
			InitializeComponent();
			//
			//TODO: Add the constructor code here
			//
		}

	protected:
		/// <summary>
		/// Clean up any resources being used.
		/// </summary>
		~Form1()
		{
			if (components)
			{
				delete components;
			}
		}

	private:
		/// <summary>
		/// Required designer variable.
		/// </summary>
		System::ComponentModel::Container ^components;

#pragma region Windows Form Designer generated code
		/// <summary>
		/// Required method for Designer support - do not modify
		/// the contents of this method with the code editor.
		/// </summary>
		void InitializeComponent(void)
		{
			this->SuspendLayout();
			// 
			// Form1
			// 
			this->AutoScaleDimensions = System::Drawing::SizeF(6, 13);
			this->AutoScaleMode = System::Windows::Forms::AutoScaleMode::Font;
			this->ClientSize = System::Drawing::Size(812, 346);
			this->DoubleBuffered = true;
			this->Name = L"Form1";
			this->Text = L"Form1";
			this->Load += gcnew System::EventHandler(this, &Form1::Form1_Load);
			this->Paint += gcnew System::Windows::Forms::PaintEventHandler(this, &Form1::Form1_Paint);
			this->Resize += gcnew System::EventHandler(this, &Form1::Form1_Resize);
			this->ResumeLayout(false);

		}
#pragma endregion
	private: System::Void Form1_Paint(System::Object^  sender, System::Windows::Forms::PaintEventArgs^  e) {
			Graphics^ g = e->Graphics;
			g->Clear(Color::White);
				  
			Pen^ pen = gcnew Pen(Color::Black);
			pen->Width = 1;
			
			/* This chunk of code (as only DrawLines are allowed) was generated by simple Python script
			   using input files with starting coordinates and finishing coordinates.
			   Y axis is inverted as Kitty's biggest part is closer to the bottom bound

			   Execute (Mac): python3.4 draw.py | pbcopy
					
			   with open('data', 'r') as f:
				   data = f.readlines()


		       for line in data:
			       try:
				       a = eval(line)
					   print("g->DrawLine(pen, %s * CELL, DEFAULT_HEIGHT - %s * CELL, %s * CELL, DEFAULT_HEIGHT - %s * CELL);" % a)
				   except SyntaxError:
				       # this is for \n
					   pass */

			g->DrawLine(pen, 3 * CELL, DEFAULT_HEIGHT - 2 * CELL, 7 * CELL, DEFAULT_HEIGHT - 2 * CELL);
			g->DrawLine(pen, 6 * CELL, DEFAULT_HEIGHT - 1 * CELL, 7 * CELL, DEFAULT_HEIGHT - 2 * CELL);
			g->DrawLine(pen, 6 * CELL, DEFAULT_HEIGHT - 1 * CELL, 9 * CELL, DEFAULT_HEIGHT - 1 * CELL);
			g->DrawLine(pen, 9 * CELL, DEFAULT_HEIGHT - 1 * CELL, 11 * CELL, DEFAULT_HEIGHT - 2 * CELL);
			g->DrawLine(pen, 11 * CELL, DEFAULT_HEIGHT - 2 * CELL, 12 * CELL, DEFAULT_HEIGHT - 3 * CELL);
			g->DrawLine(pen, 11 * CELL, DEFAULT_HEIGHT - 4 * CELL, 12 * CELL, DEFAULT_HEIGHT - 3 * CELL);
			g->DrawLine(pen, 11 * CELL, DEFAULT_HEIGHT - 4 * CELL, 11 * CELL, DEFAULT_HEIGHT - 5 * CELL);
			g->DrawLine(pen, 11 * CELL, DEFAULT_HEIGHT - 5 * CELL, 9 * CELL, DEFAULT_HEIGHT - 5 * CELL);
			g->DrawLine(pen, 9 * CELL, DEFAULT_HEIGHT - 5 * CELL, 7 * CELL, DEFAULT_HEIGHT - 4 * CELL);
			g->DrawLine(pen, 6 * CELL, DEFAULT_HEIGHT - 4 * CELL, 7 * CELL, DEFAULT_HEIGHT - 4 * CELL);
			g->DrawLine(pen, 4 * CELL, DEFAULT_HEIGHT - 3 * CELL, 6 * CELL, DEFAULT_HEIGHT - 4 * CELL);
			g->DrawLine(pen, 3 * CELL, DEFAULT_HEIGHT - 2 * CELL, 4 * CELL, DEFAULT_HEIGHT - 3 * CELL);
			g->DrawLine(pen, 11 * CELL, DEFAULT_HEIGHT - 5 * CELL, 13 * CELL, DEFAULT_HEIGHT - 7 * CELL);
			g->DrawLine(pen, 13 * CELL, DEFAULT_HEIGHT - 7 * CELL, 15 * CELL, DEFAULT_HEIGHT - 6 * CELL);
			g->DrawLine(pen, 12 * CELL, DEFAULT_HEIGHT - 3 * CELL, 14 * CELL, DEFAULT_HEIGHT - 3 * CELL);
			g->DrawLine(pen, 14 * CELL, DEFAULT_HEIGHT - 3 * CELL, 14 * CELL, DEFAULT_HEIGHT - 4 * CELL);
			g->DrawLine(pen, 14 * CELL, DEFAULT_HEIGHT - 4 * CELL, 16 * CELL, DEFAULT_HEIGHT - 4 * CELL);
			g->DrawLine(pen, 14 * CELL, DEFAULT_HEIGHT - 4 * CELL, 15 * CELL, DEFAULT_HEIGHT - 6 * CELL);
			g->DrawLine(pen, 15 * CELL, DEFAULT_HEIGHT - 6 * CELL, 16 * CELL, DEFAULT_HEIGHT - 5 * CELL);
			g->DrawLine(pen, 14 * CELL, DEFAULT_HEIGHT - 3 * CELL, 16 * CELL, DEFAULT_HEIGHT - 2 * CELL);
			g->DrawLine(pen, 16 * CELL, DEFAULT_HEIGHT - 2 * CELL, 24 * CELL, DEFAULT_HEIGHT - 2 * CELL);
			g->DrawLine(pen, 24 * CELL, DEFAULT_HEIGHT - 2 * CELL, 27 * CELL, DEFAULT_HEIGHT - 3 * CELL);
			g->DrawLine(pen, 27 * CELL, DEFAULT_HEIGHT - 3 * CELL, 32 * CELL, DEFAULT_HEIGHT - 3 * CELL);
			g->DrawLine(pen, 32 * CELL, DEFAULT_HEIGHT - 3 * CELL, 34 * CELL, DEFAULT_HEIGHT - 4 * CELL);
			g->DrawLine(pen, 34 * CELL, DEFAULT_HEIGHT - 4 * CELL, 37 * CELL, DEFAULT_HEIGHT - 4 * CELL);
			g->DrawLine(pen, 37 * CELL, DEFAULT_HEIGHT - 4 * CELL, 37 * CELL, DEFAULT_HEIGHT - 6 * CELL);
			g->DrawLine(pen, 37 * CELL, DEFAULT_HEIGHT - 6 * CELL, 36 * CELL, DEFAULT_HEIGHT - 7 * CELL);
			g->DrawLine(pen, 36 * CELL, DEFAULT_HEIGHT - 7 * CELL, 35 * CELL, DEFAULT_HEIGHT - 7 * CELL);
			g->DrawLine(pen, 35 * CELL, DEFAULT_HEIGHT - 7 * CELL, 36 * CELL, DEFAULT_HEIGHT - 6 * CELL);
			g->DrawLine(pen, 35 * CELL, DEFAULT_HEIGHT - 7 * CELL, 33 * CELL, DEFAULT_HEIGHT - 6 * CELL);
			g->DrawLine(pen, 33 * CELL, DEFAULT_HEIGHT - 6 * CELL, 15 * CELL, DEFAULT_HEIGHT - 6 * CELL);
			g->DrawLine(pen, 9 * CELL, DEFAULT_HEIGHT - 5 * CELL, 6 * CELL, DEFAULT_HEIGHT - 5 * CELL);
			g->DrawLine(pen, 6 * CELL, DEFAULT_HEIGHT - 5 * CELL, 4 * CELL, DEFAULT_HEIGHT - 4 * CELL);
			g->DrawLine(pen, 4 * CELL, DEFAULT_HEIGHT - 4 * CELL, 3 * CELL, DEFAULT_HEIGHT - 5 * CELL);
			g->DrawLine(pen, 3 * CELL, DEFAULT_HEIGHT - 5 * CELL, 3 * CELL, DEFAULT_HEIGHT - 6 * CELL);
			g->DrawLine(pen, 3 * CELL, DEFAULT_HEIGHT - 6 * CELL, 8 * CELL, DEFAULT_HEIGHT - 11 * CELL);
			g->DrawLine(pen, 8 * CELL, DEFAULT_HEIGHT - 10 * CELL, 8 * CELL, DEFAULT_HEIGHT - 9 * CELL);
			g->DrawLine(pen, 8 * CELL, DEFAULT_HEIGHT - 9 * CELL, 9 * CELL, DEFAULT_HEIGHT - 8 * CELL);
			g->DrawLine(pen, 9 * CELL, DEFAULT_HEIGHT - 8 * CELL, 11 * CELL, DEFAULT_HEIGHT - 7 * CELL);
			g->DrawLine(pen, 11 * CELL, DEFAULT_HEIGHT - 7 * CELL, 12 * CELL, DEFAULT_HEIGHT - 6 * CELL);
			g->DrawLine(pen, 8 * CELL, DEFAULT_HEIGHT - 11 * CELL, 9 * CELL, DEFAULT_HEIGHT - 11 * CELL);
			g->DrawLine(pen, 9 * CELL, DEFAULT_HEIGHT - 11 * CELL, 11 * CELL, DEFAULT_HEIGHT - 9 * CELL);
			g->DrawLine(pen, 11 * CELL, DEFAULT_HEIGHT - 9 * CELL, 12 * CELL, DEFAULT_HEIGHT - 7 * CELL);
			g->DrawLine(pen, 12 * CELL, DEFAULT_HEIGHT - 7 * CELL, 12 * CELL, DEFAULT_HEIGHT - 6 * CELL);
			g->DrawLine(pen, 10 * CELL, DEFAULT_HEIGHT - 10 * CELL, 10 * CELL, DEFAULT_HEIGHT - 11 * CELL);
			g->DrawLine(pen, 10 * CELL, DEFAULT_HEIGHT - 11 * CELL, 11 * CELL, DEFAULT_HEIGHT - 12 * CELL);
			g->DrawLine(pen, 11 * CELL, DEFAULT_HEIGHT - 12 * CELL, 12 * CELL, DEFAULT_HEIGHT - 11 * CELL);
			g->DrawLine(pen, 12 * CELL, DEFAULT_HEIGHT - 11 * CELL, 13 * CELL, DEFAULT_HEIGHT - 9 * CELL);
			g->DrawLine(pen, 13 * CELL, DEFAULT_HEIGHT - 9 * CELL, 13 * CELL, DEFAULT_HEIGHT - 7 * CELL);
			g->DrawLine(pen, 13 * CELL, DEFAULT_HEIGHT - 12 * CELL, 13 * CELL, DEFAULT_HEIGHT - 10 * CELL);
			g->DrawLine(pen, 13 * CELL, DEFAULT_HEIGHT - 10 * CELL, 14 * CELL, DEFAULT_HEIGHT - 8 * CELL);
			g->DrawLine(pen, 14 * CELL, DEFAULT_HEIGHT - 13 * CELL, 14 * CELL, DEFAULT_HEIGHT - 11 * CELL);
			g->DrawLine(pen, 14 * CELL, DEFAULT_HEIGHT - 11 * CELL, 16 * CELL, DEFAULT_HEIGHT - 9 * CELL);
			g->DrawLine(pen, 15 * CELL, DEFAULT_HEIGHT - 10 * CELL, 15 * CELL, DEFAULT_HEIGHT - 12 * CELL);
			g->DrawLine(pen, 15 * CELL, DEFAULT_HEIGHT - 12 * CELL, 16 * CELL, DEFAULT_HEIGHT - 13 * CELL);
			g->DrawLine(pen, 16 * CELL, DEFAULT_HEIGHT - 13 * CELL, 18 * CELL, DEFAULT_HEIGHT - 11 * CELL);
			g->DrawLine(pen, 16 * CELL, DEFAULT_HEIGHT - 11 * CELL, 17 * CELL, DEFAULT_HEIGHT - 9 * CELL);
			g->DrawLine(pen, 17 * CELL, DEFAULT_HEIGHT - 11 * CELL, 18 * CELL, DEFAULT_HEIGHT - 10 * CELL);
			g->DrawLine(pen, 16 * CELL, DEFAULT_HEIGHT - 13 * CELL, 17 * CELL, DEFAULT_HEIGHT - 13 * CELL);
			g->DrawLine(pen, 17 * CELL, DEFAULT_HEIGHT - 13 * CELL, 19 * CELL, DEFAULT_HEIGHT - 12 * CELL);
			g->DrawLine(pen, 19 * CELL, DEFAULT_HEIGHT - 12 * CELL, 21 * CELL, DEFAULT_HEIGHT - 13 * CELL);
			g->DrawLine(pen, 21 * CELL, DEFAULT_HEIGHT - 13 * CELL, 23 * CELL, DEFAULT_HEIGHT - 13 * CELL);
			g->DrawLine(pen, 23 * CELL, DEFAULT_HEIGHT - 13 * CELL, 22 * CELL, DEFAULT_HEIGHT - 14 * CELL);
			g->DrawLine(pen, 23 * CELL, DEFAULT_HEIGHT - 14 * CELL, 24 * CELL, DEFAULT_HEIGHT - 13 * CELL);
			g->DrawLine(pen, 24 * CELL, DEFAULT_HEIGHT - 13 * CELL, 24 * CELL, DEFAULT_HEIGHT - 14 * CELL);
			g->DrawLine(pen, 25 * CELL, DEFAULT_HEIGHT - 13 * CELL, 25 * CELL, DEFAULT_HEIGHT - 14 * CELL);
			g->DrawLine(pen, 25 * CELL, DEFAULT_HEIGHT - 13 * CELL, 27 * CELL, DEFAULT_HEIGHT - 13 * CELL);
			g->DrawLine(pen, 27 * CELL, DEFAULT_HEIGHT - 13 * CELL, 29 * CELL, DEFAULT_HEIGHT - 12 * CELL);
			g->DrawLine(pen, 29 * CELL, DEFAULT_HEIGHT - 12 * CELL, 30 * CELL, DEFAULT_HEIGHT - 12 * CELL);
			g->DrawLine(pen, 30 * CELL, DEFAULT_HEIGHT - 12 * CELL, 32 * CELL, DEFAULT_HEIGHT - 14 * CELL);
			g->DrawLine(pen, 32 * CELL, DEFAULT_HEIGHT - 14 * CELL, 31 * CELL, DEFAULT_HEIGHT - 12 * CELL);
			g->DrawLine(pen, 32 * CELL, DEFAULT_HEIGHT - 14 * CELL, 33 * CELL, DEFAULT_HEIGHT - 13 * CELL);
			g->DrawLine(pen, 33 * CELL, DEFAULT_HEIGHT - 13 * CELL, 33 * CELL, DEFAULT_HEIGHT - 9 * CELL);
			g->DrawLine(pen, 33 * CELL, DEFAULT_HEIGHT - 9 * CELL, 31 * CELL, DEFAULT_HEIGHT - 11 * CELL);
			g->DrawLine(pen, 31 * CELL, DEFAULT_HEIGHT - 11 * CELL, 31 * CELL, DEFAULT_HEIGHT - 12 * CELL);
			g->DrawLine(pen, 33 * CELL, DEFAULT_HEIGHT - 10 * CELL, 35 * CELL, DEFAULT_HEIGHT - 11 * CELL);
			g->DrawLine(pen, 35 * CELL, DEFAULT_HEIGHT - 11 * CELL, 36 * CELL, DEFAULT_HEIGHT - 13 * CELL);
			g->DrawLine(pen, 34 * CELL, DEFAULT_HEIGHT - 9 * CELL, 35 * CELL, DEFAULT_HEIGHT - 10 * CELL);
			g->DrawLine(pen, 35 * CELL, DEFAULT_HEIGHT - 10 * CELL, 36 * CELL, DEFAULT_HEIGHT - 12 * CELL);
			g->DrawLine(pen, 35 * CELL, DEFAULT_HEIGHT - 9 * CELL, 37 * CELL, DEFAULT_HEIGHT - 11 * CELL);
			g->DrawLine(pen, 36 * CELL, DEFAULT_HEIGHT - 9 * CELL, 38 * CELL, DEFAULT_HEIGHT - 10 * CELL);
			g->DrawLine(pen, 37 * CELL, DEFAULT_HEIGHT - 9 * CELL, 39 * CELL, DEFAULT_HEIGHT - 8 * CELL);
			g->DrawLine(pen, 37 * CELL, DEFAULT_HEIGHT - 8 * CELL, 38 * CELL, DEFAULT_HEIGHT - 6 * CELL);
			g->DrawLine(pen, 37 * CELL, DEFAULT_HEIGHT - 8 * CELL, 38 * CELL, DEFAULT_HEIGHT - 8 * CELL);
			g->DrawLine(pen, 38 * CELL, DEFAULT_HEIGHT - 8 * CELL, 39 * CELL, DEFAULT_HEIGHT - 7 * CELL);
			g->DrawLine(pen, 22 * CELL, DEFAULT_HEIGHT - 15 * CELL, 22 * CELL, DEFAULT_HEIGHT - 16 * CELL);
			g->DrawLine(pen, 22 * CELL, DEFAULT_HEIGHT - 16 * CELL, 23 * CELL, DEFAULT_HEIGHT - 17 * CELL);
			g->DrawLine(pen, 24 * CELL, DEFAULT_HEIGHT - 17 * CELL, 25 * CELL, DEFAULT_HEIGHT - 15 * CELL);
			g->DrawLine(pen, 18 * CELL, DEFAULT_HEIGHT - 9 * CELL, 20 * CELL, DEFAULT_HEIGHT - 9 * CELL);
			g->DrawLine(pen, 19 * CELL, DEFAULT_HEIGHT - 9 * CELL, 19 * CELL, DEFAULT_HEIGHT - 8 * CELL);
			g->DrawLine(pen, 19 * CELL, DEFAULT_HEIGHT - 8 * CELL, 20 * CELL, DEFAULT_HEIGHT - 7 * CELL);
			g->DrawLine(pen, 20 * CELL, DEFAULT_HEIGHT - 7 * CELL, 22 * CELL, DEFAULT_HEIGHT - 6.5 * CELL);
			g->DrawLine(pen, 22 * CELL, DEFAULT_HEIGHT - 6.5 * CELL, 23 * CELL, DEFAULT_HEIGHT - 7 * CELL);
			g->DrawLine(pen, 23 * CELL, DEFAULT_HEIGHT - 7 * CELL, 24 * CELL, DEFAULT_HEIGHT - 8 * CELL);
			g->DrawLine(pen, 24 * CELL, DEFAULT_HEIGHT - 8 * CELL, 24 * CELL, DEFAULT_HEIGHT - 9 * CELL);
			g->DrawLine(pen, 23 * CELL, DEFAULT_HEIGHT - 9 * CELL, 23 * CELL, DEFAULT_HEIGHT - 10 * CELL);
			g->DrawLine(pen, 23 * CELL, DEFAULT_HEIGHT - 10 * CELL, 25 * CELL, DEFAULT_HEIGHT - 10 * CELL);
			g->DrawLine(pen, 23 * CELL, DEFAULT_HEIGHT - 9 * CELL, 25 * CELL, DEFAULT_HEIGHT - 9 * CELL);
			g->DrawLine(pen, 25 * CELL, DEFAULT_HEIGHT - 9 * CELL, 25 * CELL, DEFAULT_HEIGHT - 10 * CELL);
			g->DrawLine(pen, 24 * CELL, DEFAULT_HEIGHT - 8 * CELL, 25 * CELL, DEFAULT_HEIGHT - 7 * CELL);
			g->DrawLine(pen, 25 * CELL, DEFAULT_HEIGHT - 7 * CELL, 26 * CELL, DEFAULT_HEIGHT - 7 * CELL);
			g->DrawLine(pen, 26 * CELL, DEFAULT_HEIGHT - 7 * CELL, 28 * CELL, DEFAULT_HEIGHT - 8 * CELL);
			g->DrawLine(pen, 28 * CELL, DEFAULT_HEIGHT - 8 * CELL, 29 * CELL, DEFAULT_HEIGHT - 9 * CELL);
			g->DrawLine(pen, 28 * CELL, DEFAULT_HEIGHT - 9 * CELL, 30 * CELL, DEFAULT_HEIGHT - 9 * CELL);
			g->DrawLine(pen, 22.5 * CELL, DEFAULT_HEIGHT - 12 * CELL, 23 * CELL, DEFAULT_HEIGHT - 12.5 * CELL);
			g->DrawLine(pen, 24 * CELL, DEFAULT_HEIGHT - 12.5 * CELL, 25 * CELL, DEFAULT_HEIGHT - 12 * CELL);
			g->DrawLine(pen, 23 * CELL, DEFAULT_HEIGHT - 11 * CELL, 23.5 * CELL, DEFAULT_HEIGHT - 11.5 * CELL);
			g->DrawLine(pen, 23.5 * CELL, DEFAULT_HEIGHT - 11.5 * CELL, 24 * CELL, DEFAULT_HEIGHT - 11 * CELL);
			g->DrawLine(pen, 24 * CELL, DEFAULT_HEIGHT - 11 * CELL, 24.5 * CELL, DEFAULT_HEIGHT - 11.5 * CELL);
			g->DrawLine(pen, 24.5 * CELL, DEFAULT_HEIGHT - 11.5 * CELL, 25 * CELL, DEFAULT_HEIGHT - 11 * CELL);
			g->DrawLine(pen, 25 * CELL, DEFAULT_HEIGHT - 11 * CELL, 24.5 * CELL, DEFAULT_HEIGHT - 10.5 * CELL);
			g->DrawLine(pen, 24.5 * CELL, DEFAULT_HEIGHT - 10.5 * CELL, 24 * CELL, DEFAULT_HEIGHT - 11 * CELL);
			g->DrawLine(pen, 24 * CELL, DEFAULT_HEIGHT - 11 * CELL, 23.5 * CELL, DEFAULT_HEIGHT - 10.5 * CELL);
			g->DrawLine(pen, 23.5 * CELL, DEFAULT_HEIGHT - 10.5 * CELL, 23 * CELL, DEFAULT_HEIGHT - 11 * CELL);

			 }
	private: System::Void Form1_Load(System::Object^  sender, System::EventArgs^  e) {
			 }
private: System::Void Form1_Resize(System::Object^  sender, System::EventArgs^  e) {
			 this->Refresh();
		 }
};
}

